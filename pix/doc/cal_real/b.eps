%!PS-Adobe-2.0
%%Title: b.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Thu Mar  8 00:17:44 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (b.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (audrey)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Mar  8 00:17:44 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
798 280 M
63 0 V
6129 0 R
-63 0 V
714 280 M
( 0) Rshow
1.000 UL
LTb
798 1198 M
63 0 V
6129 0 R
-63 0 V
-6213 0 R
( 500) Rshow
1.000 UL
LTb
798 2117 M
63 0 V
6129 0 R
-63 0 V
-6213 0 R
( 1000) Rshow
1.000 UL
LTb
798 3035 M
63 0 V
6129 0 R
-63 0 V
-6213 0 R
( 1500) Rshow
1.000 UL
LTb
798 3954 M
63 0 V
6129 0 R
-63 0 V
-6213 0 R
( 2000) Rshow
1.000 UL
LTb
798 4872 M
63 0 V
6129 0 R
-63 0 V
-6213 0 R
( 2500) Rshow
1.000 UL
LTb
1240 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
(-600) Cshow
1.000 UL
LTb
2125 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
(-400) Cshow
1.000 UL
LTb
3009 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
(-200) Cshow
1.000 UL
LTb
3894 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 0) Cshow
1.000 UL
LTb
4779 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 200) Cshow
1.000 UL
LTb
5663 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 400) Cshow
1.000 UL
LTb
6548 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 600) Cshow
1.000 UL
LTb
1.000 UL
LTb
798 4872 N
798 280 L
6192 0 V
0 4592 V
-6192 0 V
Z stroke
1.000 UP
1108 4642 M
(fx\(x\) = ww*\( 1 + \(\(x-cx\)/dx\)**2 + Ax*\(\(x-cx\)/dx\)**3 + Bx*\(\(x-cx\)/dx\)**4 \)) Lshow
1108 4413 M
(gx\(x\) = ww*\( 1 + \(\(x-cy\)/dy\)**2 + Ay*\(\(x-cy\)/dy\)**3 + By*\(\(x-cy\)/dy\)**4 \)) Lshow
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LC0 setrgbcolor
LTb
6339 4739 M
(wx) Rshow
LT0
LC0 setrgbcolor
1240 2049 Pls
1329 1990 Pls
1417 1999 Pls
1506 1989 Pls
1594 2078 Pls
1683 1995 Pls
1771 1929 Pls
1859 2059 Pls
1948 1855 Pls
2036 1926 Pls
2125 1940 Pls
2213 2003 Pls
2302 1840 Pls
2390 1720 Pls
2479 1870 Pls
2567 1724 Pls
2656 1719 Pls
2744 1760 Pls
2833 1653 Pls
2921 1519 Pls
3009 1584 Pls
3098 1611 Pls
3186 1540 Pls
3275 1485 Pls
3363 1490 Pls
3452 1407 Pls
3540 1347 Pls
3629 1278 Pls
3717 1250 Pls
3806 1292 Pls
3894 1194 Pls
3982 1149 Pls
4071 1094 Pls
4159 1085 Pls
4248 1084 Pls
4336 1105 Pls
4425 1036 Pls
4513 1069 Pls
4602 1014 Pls
4690 944 Pls
4779 964 Pls
4867 944 Pls
4955 1012 Pls
5044 935 Pls
5132 930 Pls
5221 981 Pls
5309 950 Pls
5398 993 Pls
5486 1049 Pls
5575 1037 Pls
5663 931 Pls
5752 995 Pls
5840 1018 Pls
5929 1050 Pls
6017 1153 Pls
6105 1099 Pls
6194 1150 Pls
6282 1118 Pls
6371 1240 Pls
6459 1279 Pls
6548 1358 Pls
6622 4739 Pls
1.000 UP
1.000 UL
LT1
LC2 setrgbcolor
LTb
6339 4599 M
(wy) Rshow
LT1
LC2 setrgbcolor
1240 1001 Crs
1329 903 Crs
1417 960 Crs
1506 943 Crs
1594 912 Crs
1683 904 Crs
1771 930 Crs
1859 921 Crs
1948 889 Crs
2036 890 Crs
2125 867 Crs
2213 902 Crs
2302 905 Crs
2390 892 Crs
2479 909 Crs
2567 945 Crs
2656 916 Crs
2744 947 Crs
2833 964 Crs
2921 939 Crs
3009 969 Crs
3098 990 Crs
3186 978 Crs
3275 1027 Crs
3363 1027 Crs
3452 1067 Crs
3540 1121 Crs
3629 1143 Crs
3717 1143 Crs
3806 1206 Crs
3894 1289 Crs
3982 1278 Crs
4071 1318 Crs
4159 1344 Crs
4248 1364 Crs
4336 1514 Crs
4425 1518 Crs
4513 1502 Crs
4602 1559 Crs
4690 1570 Crs
4779 1620 Crs
4867 1664 Crs
4955 1651 Crs
5044 1857 Crs
5132 1862 Crs
5221 1829 Crs
5309 1962 Crs
5398 1969 Crs
5486 2031 Crs
5575 2154 Crs
5663 2208 Crs
5752 2317 Crs
5840 2225 Crs
5929 2469 Crs
6017 2774 Crs
6105 2872 Crs
6194 2885 Crs
6282 2804 Crs
6371 2978 Crs
6459 3889 Crs
6548 3701 Crs
6622 4599 Crs
1.000 UL
LT2
/Helvetica findfont 140 scalefont setfont
LTb
6339 4459 M
(sqrt\(fx\(x\)\)) Rshow
LT2
6423 4459 M
399 0 V
798 1979 M
63 13 V
62 11 V
63 9 V
62 7 V
63 5 V
62 2 V
63 2 V
62 -1 V
63 -2 V
62 -3 V
63 -5 V
63 -6 V
62 -8 V
63 -9 V
62 -10 V
63 -11 V
62 -12 V
63 -14 V
62 -14 V
63 -15 V
62 -17 V
63 -17 V
63 -17 V
62 -19 V
63 -20 V
62 -20 V
63 -21 V
62 -21 V
63 -22 V
62 -23 V
63 -23 V
62 -24 V
63 -24 V
63 -25 V
62 -25 V
63 -25 V
62 -26 V
63 -26 V
62 -27 V
63 -26 V
62 -27 V
63 -27 V
62 -27 V
63 -27 V
63 -27 V
62 -27 V
63 -27 V
62 -27 V
63 -26 V
62 -26 V
63 -26 V
62 -25 V
63 -25 V
62 -24 V
63 -23 V
63 -23 V
62 -22 V
63 -20 V
62 -19 V
63 -18 V
62 -17 V
63 -15 V
62 -13 V
63 -11 V
62 -10 V
63 -7 V
63 -5 V
62 -3 V
63 -1 V
62 2 V
63 3 V
62 6 V
63 8 V
62 10 V
63 12 V
62 14 V
63 15 V
63 17 V
62 18 V
63 20 V
62 20 V
63 21 V
62 23 V
63 23 V
62 24 V
63 24 V
62 24 V
63 26 V
63 25 V
62 25 V
63 26 V
62 26 V
63 26 V
62 26 V
63 25 V
62 26 V
63 25 V
62 26 V
63 25 V
stroke
LT3
/Helvetica findfont 140 scalefont setfont
LTb
6339 4319 M
(sqrt\(gx\(x\)\)) Rshow
LT3
6423 4319 M
399 0 V
798 1317 M
63 -46 V
62 -43 V
63 -42 V
62 -38 V
63 -36 V
62 -33 V
63 -31 V
62 -28 V
63 -24 V
62 -22 V
63 -19 V
63 -17 V
62 -13 V
63 -11 V
62 -8 V
63 -6 V
62 -3 V
63 -2 V
62 0 V
63 2 V
62 4 V
63 5 V
63 6 V
62 7 V
63 7 V
62 9 V
63 8 V
62 10 V
63 9 V
62 10 V
63 10 V
62 10 V
63 10 V
63 10 V
62 11 V
63 10 V
62 11 V
63 11 V
62 11 V
63 11 V
62 11 V
63 12 V
62 12 V
63 13 V
63 13 V
62 14 V
63 14 V
62 15 V
63 16 V
62 17 V
63 18 V
62 19 V
63 20 V
62 22 V
63 23 V
63 24 V
62 25 V
63 28 V
62 28 V
63 31 V
62 32 V
63 34 V
62 35 V
63 38 V
62 39 V
63 41 V
63 43 V
62 45 V
63 46 V
62 49 V
63 50 V
62 53 V
63 54 V
62 57 V
63 58 V
62 60 V
63 62 V
63 64 V
62 65 V
63 68 V
62 70 V
63 71 V
62 73 V
63 75 V
62 77 V
63 79 V
62 81 V
63 82 V
63 85 V
62 86 V
63 87 V
62 90 V
63 92 V
62 93 V
63 95 V
62 97 V
63 98 V
62 101 V
63 102 V
stroke
LTb
798 4872 N
798 280 L
6192 0 V
0 4592 V
-6192 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Page: 2 2
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
714 280 M
63 0 V
6213 0 R
-63 0 V
630 280 M
( 0) Rshow
1.000 UL
LTb
714 1045 M
63 0 V
6213 0 R
-63 0 V
-6297 0 R
( 0.5) Rshow
1.000 UL
LTb
714 1811 M
63 0 V
6213 0 R
-63 0 V
-6297 0 R
( 1) Rshow
1.000 UL
LTb
714 2576 M
63 0 V
6213 0 R
-63 0 V
-6297 0 R
( 1.5) Rshow
1.000 UL
LTb
714 3341 M
63 0 V
6213 0 R
-63 0 V
-6297 0 R
( 2) Rshow
1.000 UL
LTb
714 4107 M
63 0 V
6213 0 R
-63 0 V
-6297 0 R
( 2.5) Rshow
1.000 UL
LTb
714 4872 M
63 0 V
6213 0 R
-63 0 V
-6297 0 R
( 3) Rshow
1.000 UL
LTb
714 280 M
0 63 V
0 4529 R
0 -63 V
714 140 M
(-2000) Cshow
1.000 UL
LTb
1499 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
(-1500) Cshow
1.000 UL
LTb
2283 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
(-1000) Cshow
1.000 UL
LTb
3068 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
(-500) Cshow
1.000 UL
LTb
3852 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 0) Cshow
1.000 UL
LTb
4637 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 500) Cshow
1.000 UL
LTb
5421 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 1000) Cshow
1.000 UL
LTb
6206 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 1500) Cshow
1.000 UL
LTb
6990 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTb
714 4872 N
714 280 L
6276 0 V
0 4592 V
-6276 0 V
Z stroke
1.000 UP
1028 4642 M
(fx\(x\) = ww*\( 1 + \(\(x-cx\)/dx\)**2 + Ax*\(\(x-cx\)/dx\)**3 + Bx*\(\(x-cx\)/dx\)**4 \)) Lshow
1028 4413 M
(gx\(x\) = ww*\( 1 + \(\(x-cy\)/dy\)**2 + Ay*\(\(x-cy\)/dy\)**3 + By*\(\(x-cy\)/dy\)**4 \)) Lshow
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LC2 setrgbcolor
LTb
6339 4739 M
(wx/wy) Rshow
LT0
LC2 setrgbcolor
2911 4036 Pls
2942 4482 Pls
2973 4152 Pls
3005 4226 Pls
3036 4636 Pls
3068 4485 Pls
3099 4163 Pls
3130 4531 Pls
3162 4237 Pls
3193 4409 Pls
3224 4607 Pls
3256 4523 Pls
3287 4104 Pls
3319 3882 Pls
3350 4147 Pls
3381 3605 Pls
3413 3740 Pls
3444 3677 Pls
3475 3351 Pls
3507 3157 Pls
3538 3177 Pls
3570 3150 Pls
3601 3044 Pls
3632 2747 Pls
3664 2759 Pls
3695 2472 Pls
3726 2221 Pls
3758 2051 Pls
3789 2000 Pls
3821 1953 Pls
3852 1668 Pls
3883 1614 Pls
3915 1481 Pls
3946 1438 Pls
3978 1415 Pls
4009 1304 Pls
4040 1214 Pls
4072 1268 Pls
4103 1158 Pls
4134 1068 Pls
4166 1062 Pls
4197 1015 Pls
4229 1097 Pls
4260 916 Pls
4291 908 Pls
4323 973 Pls
4354 889 Pls
4385 927 Pls
4417 952 Pls
4448 898 Pls
4480 797 Pls
4511 817 Pls
4542 861 Pls
4574 819 Pls
4605 816 Pls
4637 764 Pls
4668 791 Pls
4699 788 Pls
4731 825 Pls
4762 704 Pls
4793 763 Pls
6622 4739 Pls
1.000 UL
LT1
/Helvetica findfont 140 scalefont setfont
LTb
6339 4599 M
(sqrt\(fx\(x\)/gx\(x\)\)) Rshow
LT1
6423 4599 M
399 0 V
2362 772 M
64 334 V
63 295 V
63 297 V
64 314 V
63 339 V
64 369 V
63 394 V
63 404 V
64 383 V
63 313 V
64 195 V
63 48 V
63 -90 V
64 -191 V
63 -249 V
64 -272 V
63 -276 V
63 -268 V
64 -258 V
63 -246 V
64 -236 V
63 -226 V
63 -215 V
64 -204 V
63 -190 V
63 -172 V
64 -150 V
63 -126 V
64 -99 V
63 -73 V
63 -51 V
64 -32 V
63 -18 V
64 -11 V
63 -6 V
63 -4 V
64 -4 V
63 -4 V
64 -6 V
63 -7 V
63 -9 V
64 -10 V
63 -11 V
64 -13 V
63 -14 V
63 -14 V
64 -16 V
63 -17 V
64 -18 V
63 -19 V
63 -20 V
64 -21 V
63 -22 V
64 -24 V
63 -26 V
63 -28 V
64 -32 V
63 -39 V
63 -54 V
stroke
LTb
714 4872 N
714 280 L
6276 0 V
0 4592 V
-6276 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 2
